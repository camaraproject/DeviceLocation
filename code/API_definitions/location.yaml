openapi: 3.0.3
info:
  title: Device location API
  description: Service Enabling Network Function API for location verification
  termsOfService: http://swagger.io/terms/
  contact:
    email: project-email@sample.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.2.0-wip
externalDocs:
  description: Product documentation at Camara
  url: https://github.com/camaraproject/
security:
  - oAuth2ClientCredentials: [ ]
  #  - BasicAuth: []
  #  - apiKey: []
  - three_legged:
      - device-location-tracking
      - device-location-read
servers:
  - url: '{apiRoot}/{basePath}'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root
      basePath:
        default: location/v0
        description: Base path for the device location API
paths:
  /verify:
    post:
      tags:
        - Location verification
      summary: 'Execute location verification for a user equipment'
      operationId: verifyLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyLocationRequest'
        required: true
      responses:
        '200':
          description: Location verification result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyLocationResponse'
              examples: 
                'True':
                  summary: Match
                  description: The network locates the device within the requested area
                  value:
                    verificationResult: 'TRUE'
                'False':
                  summary: No match
                  description: The requested area does not match the area where the network locates the device
                  value:
                    verificationResult: 'FALSE' 
                'Unknown':
                  summary: Unknown
                  description: The network cannot locate the device
                  value:
                    verificationResult: 'UNKNOWN'
                'Partial':
                  summary: Partial match
                  description: The requested area partially match the area where the network locates the device
                  value:
                    verificationResult: 'PARTIAL' 
                    matchRate: 74
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'
  /subscriptions:
    post:
      tags:
        - Location Subscription
      summary: 'Create a location subscription for a device'
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
        required: true
      responses:
        '201':
          description: Created (Successful creation of subscription)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInfo'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '409':
          $ref: '#/components/responses/Generic409'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'
  /notifications:
    post:
      tags:
        - Notification Callback
      summary: "Subscription notification callback"
      operationId: postNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
      responses:
        '204':
          description: No Content

components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: '{tokenUrl}'
          scopes: { }
    #    BasicAuth:
    #      type: http
    #      scheme: basic
    #    apiKey:
    #      type: apiKey
    #      description: API key to authorize requests
    #      name: apikey
    #      in: query
    three_legged:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.example.com/authorize
          tokenUrl: https://auth.example.com/token
          scopes:
            device-location-read: Read device location
  schemas:
    Area:
      oneOf: 
        -  $ref: "#/components/schemas/Circle"
      discriminator: 
        propertyName: type
        mapping: 
          Circle:  "#/components/schemas/Circle"
    Circle:
      type: object
      description: Circular area
      required:
        - type
        - location
        - accuracy
      properties:
        type:
          type: string
          description:  Type of this area.
        location:
          $ref: '#/components/schemas/Point'
        accuracy:
          type: number
          description: Expected accuracy for the verification in km, from location (radius)
          minimum: 2
          maximum: 200
      example:
        type: Circle
        location:
          latitude: 50.735851
          longitude: 7.10066
        accuracy: 50
    Point:
      type: object
      description: Coordinates (latitude, longitude) defining a location in a map
      required: 
        - latitude
        - longitude
      properties: 
        latitude:
          $ref: "#/components/schemas/Latitude"
        longitude:
          $ref: "#/components/schemas/Longitude"
      example: 
        latitude: 50.735851
        longitude: 7.10066
    Latitude:
      description: Latitude component of a location
      type: number
      format: double
      minimum: -90
      maximum: 90
      example: 50.735851      
    Longitude:
      description: Longitude component of location
      type: number
      format: double
      minimum: -180
      maximum: 180
      example: 7.10066        
    VerifyLocationRequest:
      type: object
      properties:
        ueId:
          $ref: '#/components/schemas/UeId'
        uePort:
          $ref: '#/components/schemas/Port'
        area:
          $ref: '#/components/schemas/Area'
      required:
        - ueId
        - area
    VerifyLocationResponse:
      type: object
      required:
        - verificationResult
      properties:
        verificationResult:
          $ref: '#/components/schemas/VerificationResult'
        matchRate:
          $ref: '#/components/schemas/MatchRate'
    UeId:
      description: User equipment identifier
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/ExternalId'
        msisdn:
          $ref: '#/components/schemas/MSISDN'
        ipv4Addr:
          $ref: '#/components/schemas/Ipv4Addr'
        ipv6Addr:
          $ref: '#/components/schemas/Ipv6Addr'
      minProperties: 1
    UeIdList:
      description: List of User equipment identifiers
      type: array
      items:
        $ref: '#/components/schemas/UeId'
    ExternalId:
      type: string
      example: '123456789@domain.com'
    MSISDN:
      type: string
      pattern: '^\+?[0-9]{5,15}$'
      example: '123456789'
      description: Subscriber number in E.164 format (starting with country code). Optionally prefixed with '+'.
    Ipv4Addr:
      type: string
      format: ipv4
      pattern: '^([01]?\d\d?|2[0-4]\d|25[0-5])(?:\.(?:[01]?\d\d?|2[0-4]\d|25[0-5])){3}(\/([0-9]|[1-2][0-9]|3[0-2]))?$'
      example: '192.168.0.1/24'
      description: |
        IPv4 address may be specified in form <address/mask> as:
          - address - an IPv4 number in dotted-quad form 1.2.3.4. Only this exact IP number will match the flow control rule.
          - address/mask - an IP number as above with a mask width of the form 1.2.3.4/24.
            In this case, all IP numbers from 1.2.3.0 to 1.2.3.255 will match. The bit width MUST be valid for the IP version.
    Ipv6Addr:
      type: string
      format: ipv6
      pattern: '(^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))?$)|(^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\/.+)?$)'
      example: '2001:db8:85a3:8d3:1319:8a2e:370:7344'
      description: |
        IPv6 address, following IETF 5952 format, may be specified in form <address/mask> as:
          - address - The /128 subnet is optional for single addresses:
            - 2001:db8:85a3:8d3:1319:8a2e:370:7344
            - 2001:db8:85a3:8d3:1319:8a2e:370:7344/128
          - address/mask - an IP v6 number with a mask:
            - 2001:db8:85a3:8d3::0/64
            - 2001:db8:85a3:8d3::/64
    Port:
      type: integer
      minimum: 0
      maximum: 65535
      description: User equipment port. Device port may be required along with IP address to identify the target device
      example: 5060
    VerificationResult:
      description: |
        Result of a verification request:
          - `TRUE`: when the network locates the device within the requested area, 
          - `FALSE`: when the requested area does not match the area where the network locates the device,
          - `UNKNOWN`: when the network cannot locate the device,
          - `PARTIAL`: when the requested area partially match the area where the network locates the device. A `match_rate` could be included in the response.
      type: string
      enum:
        - 'TRUE'
        - 'FALSE'
        - 'UNKNOWN'
        - 'PARTIAL'
    MatchRate:
      description: Match rate estimation for the location verification in percent
      type: integer
      minimum: 1
      maximum: 99
    ErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP status code returned along with this error response
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description
    LocationEventType:
      description: |
        AREA_ENTERED - Location event triggered when the UE entered the given area
        AREA_LEFT - Location event triggered when the UE left the given area
      type: string
      enum:
        - AREA_ENTERED
        - AREA_LEFT
    LocationEventTypeList:
      description: List of Location Event Type
      type: array
      items:
        $ref: '#/components/schemas/LocationEventType'
      example: [ AREA_ENTERED, AREA_LEFT ]
    CreateSubscription:
      description: The request for creating a Location Subscription
      type: object
      properties:
        ueId:
          $ref: '#/components/schemas/UeId'
        eventTypes:
          $ref: '#/components/schemas/LocationEventTypeList'
        area:
          $ref: '#/components/schemas/Area'
        notificationUrl:
          type: string
          example: "https://application-server.com"
          description: Allows asynchronous delivery of aread-location related events
        notificationAuthToken:
          type: string
          example: "c8974e592c2fa383d4a3960714"
          description: Authentication token for callback API
        subscriptionExpireTime:
          type: string
          format: date-time
          example: 2023-01-17T13:18:23.682Z
          description: The time when the location-tracking has to be terminated (e.g. in 14 days from now on). Provided in date-time format.
        startedAt:
          type: string
          format: date-time
          example: 2023-01-17T13:18:23.682Z
          description: The time when the location-tracking has to be started (e.g. in 7 days from now on). Provided in date-time format.
      required:
        - ueIds
        - eventTypes
        - notificationUrl
        - notificationAuthToken
        - subscriptionExpireTime
    SubscriptionInfo:
      description: Represents a area-location subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateSubscription'
        - type: object
          properties:
            subscriptionId:
              $ref: '#/components/schemas/SubscriptionId'
            startedAt:
              type: string
              format: date-time
            expiresAt:
              type: string
              format: date-time
          required:
            - subscriptionId
            - startedAt
            - expiresAt
    SubscriptionId:
      type: string
      description: The subscription identifier.
    EventTime:
      format: date-time
      type: string
      description: The time when the event was notified.
    Notification:
      description: The notification callback.
      type: object
      required:
        - subscriptionId
        - event
        - eventTime
        - ueId
      properties:
        subscriptionId:
          $ref: '#/components/schemas/SubscriptionId'
        ueId:
          $ref: '#/components/schemas/UeId'
        eventType:
          $ref: "#/components/schemas/LocationEventType"
        eventTime:
          $ref: '#/components/schemas/EventTime'

  responses:
    Generic400:
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 400
            code: INVALID_INPUT
            message: 'Invalid input'
    Generic401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 401
            code: UNAUTHORIZED
            message: 'Authorization failed: ...'
    Generic403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 403
            code: FORBIDDEN
            message: 'Operation not allowed: ...'
    Generic404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 404
            code: NOT_FOUND
            message: 'The specified resource is not found'
    Generic409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            code: CONFLICT
            message: "The specified resource is in a conflict"
    Generic500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 500
            code: INTERNAL_SERVER_ERROR
            message: 'Internal server error'
    Generic503:
      description: Service unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 503
            code: SERVICE_UNAVAILABLE
            message: 'Service unavailable'
